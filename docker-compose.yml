services:
  mongodb:
    image: mongo:6-jammy
    container_name: mongo_mongo
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '27017:27017'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@localhost:27017/?authSource=admin --quiet
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      options:
        max-size: 1g
    volumes:
      - mongo-data:/data/db

  builder:
    image: gradle:8.11.1-jdk17-jammy
    container_name: app_builder
    working_dir: /app
    volumes:
      - .:/app   # Mount the current directory to `/app` in the container
      - gradle-cache:/root/.gradle # Reuse Gradle cache for faster builds
    command: gradle bootJar

  app:
    image: openjdk:17-jdk-slim # Use a lightweight OpenJDK image for running the app
    container_name: mongo_app
    depends_on:
      builder:
        condition: service_completed_successfully
      mongodb:
        condition: service_healthy
    working_dir: /app
    volumes:
      - .:/app   # Mount the current directory to `/app` in the container
    env_file:
      - .env
    environment:
      - SPRING_DATA_MONGODB_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - SPRING_DATA_MONGODB_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    ports:
      - '8080:8080'
    command: java -jar build/libs/hello-mongo-0.0.1.jar
    restart: always

volumes:
  gradle-cache:
  mongo-data:
